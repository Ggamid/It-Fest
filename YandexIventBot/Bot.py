import telebot
import requests
import vk_api
from telebot import types
from requests import get
from Sqlighter import Sqlighter


token = "5248705269:AAF0vUzDRuf3nYV-M6Ur9OFnlQNyx_izGKY"
tokenVK = "fd98b0c9fd98b0c9fd98b0c984fde4b800ffd98fd98b0c99fd5c972905042d874946aa7"
version = 5.131
domain = "nauchim.online"
session = vk_api.VkApi(token=tokenVK)
vk = session.get_api()

bot = telebot.TeleBot(token)


# Bot begin
@bot.message_handler(commands=['start', 'add_tag', 'remove_tag', 'change_sending'])
def start_message(message):
    if message.text == "/start":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        support = types.KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞‚öôÔ∏è") #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

        markup.add(support)
        send_mess = f"Hello {message.from_user.first_name}"
        sti = open("AnimatedSticker.tgs", "rb")

        bot.send_sticker(message.chat.id, sti) # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
        bot.send_message(message.chat.id,
                         f'–°–∞–ª–∞–º {message.from_user.first_name}!, –Ø –±–æ—Çü§ñ, –ú–µ–Ω—è –∑–æ–≤—É—Ç YaNotifi! –∏ –º–æ—è —Ü–µ–ª—å —É–≤–µ–¥–æ–º–ª—è—Ç—å —Ç–µ–±—è –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞—Ö –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ù–∞—É—á–∏–º Online‚ùïüì®'.format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=markup)
        Sqlighter.add_id(message.from_user.id)

    elif message.text == "/add_tag":


        bot.send_message(message.chat.id, f"–í–∞—à –Ω—ã–Ω–µ—à–Ω–∏–π —Å–ø–∏—Å–æ–∫: \n{Sqlighter.get_tag(message.from_user.id)}")
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Ö—ç—à—Ç—ç–≥ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ üì•:".format())
        bot.send_message(message.chat.id, "YaNotifi, –î–æ–±–∞–≤—å —Ö—ç—à—Ç—ç–≥: #text".format())


    elif message.text == "/remove_tag":

        bot.send_message(message.chat.id, f"–í–∞—à –Ω—ã–Ω–µ—à–Ω–∏–π —Å–ø–∏—Å–æ–∫: \n{Sqlighter.get_tag(message.from_user.id)}")
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Ö—ç—à—Ç—ç–≥ –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ üöÆ:".format())
        bot.send_message(message.chat.id, "YaNotifi, –£–¥–∞–ª–∏ —Ö—ç—à—Ç—ç–≥: #text".format())



    elif message.text == "/change_sending":

        markup = types.InlineKeyboardMarkup(row_width=1)
        item_change_1 = types.InlineKeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å‚õîÔ∏è", callback_data="Continue Sending")
        item_change_2 = types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—åüì´", callback_data="Stop Sending")
        markup.add(item_change_1, item_change_2)

        bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π? - –Ω–∞–∂–º–∏—Ç–µ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å \n –•–æ—Ç–∏—Ç–µ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π? - –Ω–∞–∂–º–∏—Ç–µ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == "private":
        if message.text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞‚öôÔ∏è":
            bot.send_message(message.chat.id, "@GGAMID")
        else:
            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n         /add_tag - –¥–æ–±–∞–≤–∏—Ç—å —Ö—ç—à—Ç—ç–≥ \n         /change_sending - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ\–≤–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ \n         /remove_tag - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ö—ç—à—Ç—ç–≥–∞")


# Bot_end


def pars(domain):
    status = session.method("wall.get", {"domain": domain, "count": 10})  #–∑–∞–ø—Ä–æ—Å –≤ vk api
    return status


def GetInfo(domain):
    data = pars(domain)  # –ù–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

    data2 = data["items"]
    list_post_text = {}

    for i in range(0, len(data2)):  # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–∑ data2 —Ç–µ–∫—Å—Ç—ã –ø–æ—Å—Ç–æ–≤
        text_post = data2[i]["text"]
        text_data = data2[i]["date"]
        img_post = None
        if "attachments" in data2[i]:
            if data2[i]["attachments"][0]["type"] == "photo":
                img_post = data2[i]['attachments'][0]["photo"]["sizes"][4]["url"]
        list_post_text[i] = [text_data, text_post, img_post]


    return list_post_text


def send_post_Htag(text_hashtag, dict_info): # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç—Å—è –ø–æ —Å–ª–æ–≤–∞—Ä—é –∏ –∏—â–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å –Ω—É–∂–Ω—ã–º–∏ —Ö—ç—à—Ç—ç–≥–∞–º–∏
    for i in range(0, 10):
        if text_hashtag[0] == "#" and text_hashtag in dict_info[i][1]:
            stroka_for_send = dict_info[i][1]
            break
        else:
            stroka_for_send = "—Ç–∞–∫–æ–≥–æ —Ç—ç–≥–∞ –Ω–µ—Ç"
    return stroka_for_send



bot.polling(none_stop=True)